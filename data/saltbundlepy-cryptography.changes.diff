--- python-cryptography.changes
+++ saltbundlepy-cryptography.changes
@@ -1,148 +1,39 @@
 -------------------------------------------------------------------
-Sun Feb  7 20:11:11 UTC 2021 - Michael Ströder <michael@stroeder.com>
-
-- update to 3.3.2 (bsc#1182066, CVE-2020-36242, bsc#1198331):
-  * SECURITY ISSUE: Fixed a bug where certain sequences of update()
-    calls when symmetrically encrypting very large payloads (>2GB) could
-    result in an integer overflow, leading to buffer overflows.
-    CVE-2020-36242
-  - drops CVE-2020-36242-buffer-overflow.patch on older dists
-
--------------------------------------------------------------------
-Sun Dec 20 09:31:33 UTC 2020 - Dirk Müller <dmueller@suse.com>
-
-- update to 3.3.1:
-  * Re-added a legacy symbol causing problems for older ``pyOpenSSL`` use 
-
--------------------------------------------------------------------
-Wed Dec  9 11:56:30 UTC 2020 - Marcus Rueckert <mrueckert@suse.de>
-
-- update to 3.3.0
-  - BACKWARDS INCOMPATIBLE: Support for Python 3.5 has been removed
-    due to low usage and maintenance burden.
-  - BACKWARDS INCOMPATIBLE: The GCM and AESGCM now require 64-bit
-    to 1024-bit (8 byte to 128 byte) initialization vectors. This
-    change is to conform with an upcoming OpenSSL release that will
-    no longer support sizes outside this window.
-  - BACKWARDS INCOMPATIBLE: When deserializing asymmetric keys we
-    now raise ValueError rather than UnsupportedAlgorithm when an
-    unsupported cipher is used. This change is to conform with an
-    upcoming OpenSSL release that will no longer distinguish
-    between error types.
-  - BACKWARDS INCOMPATIBLE: We no longer allow loading of finite
-    field Diffie-Hellman parameters of less than 512 bits in
-    length. This change is to conform with an upcoming OpenSSL
-    release that no longer supports smaller sizes. These keys were
-    already wildly insecure and should not have been used in any
-    application outside of testing.
-  - Updated Windows, macOS, and manylinux wheels to be compiled
-    with OpenSSL 1.1.1i.
-  - Python 2 support is deprecated in cryptography. This is the
-    last release that will support Python 2.
-  - Added the recover_data_from_signature() function to
-    RSAPublicKey for recovering the signed data from an RSA
-    signature. 
-
--------------------------------------------------------------------
-Sun Dec  6 20:37:33 UTC 2020 - Matej Cepl <mcepl@suse.com>
-
-- Remove unnecessary dependency virtualenv.
-
--------------------------------------------------------------------
-Wed Oct 28 14:29:05 UTC 2020 - Michael Ströder <michael@stroeder.com>
-
-- update to 3.2.1:
-  Disable blinding on RSA public keys to address an error with
-  some versions of OpenSSL.
-
--------------------------------------------------------------------
-Mon Oct 26 11:39:02 UTC 2020 - Michael Ströder <michael@stroeder.com>
-
-- update to 3.2 (bsc#1178168, CVE-2020-25659):
-  * CVE-2020-25659: Attempted to make RSA PKCS#1v1.5 decryption more constant time,
-    to protect against Bleichenbacher vulnerabilities. Due to limitations imposed
-    by our API, we cannot completely mitigate this vulnerability.
-  * Support for OpenSSL 1.0.2 has been removed.
-  * Added basic support for PKCS7 signing (including SMIME) via PKCS7SignatureBuilder.
-- drops 5507-mitigate-Bleichenbacher-attacks.patch on older dists
-
--------------------------------------------------------------------
-Mon Sep 28 10:49:56 UTC 2020 - Dirk Mueller <dmueller@suse.com>
-
-- update to 3.1.1:
-  * wheels compiled with OpenSSL 1.1.1h. 
-
--------------------------------------------------------------------
-Fri Sep 18 11:15:53 UTC 2020 - Dirk Mueller <dmueller@suse.com>
-
-- update to 3.1:
-  * **BACKWARDS INCOMPATIBLE:** Removed support for ``idna`` based
-    :term:`U-label` parsing in various X.509 classes. This support was originally
-    deprecated in version 2.1 and moved to an extra in 2.5.
-  * Deprecated OpenSSL 1.0.2 support. OpenSSL 1.0.2 is no longer supported by
-    the OpenSSL project. The next version of ``cryptography`` will drop support
-    for it.
-  * Deprecated support for Python 3.5. This version sees very little use and will
-    be removed in the next release.
-  * ``backend`` arguments to functions are no longer required and the
-    default backend will automatically be selected if no ``backend`` is provided.
-  * Added initial support for parsing certificates from PKCS7 files with
-    :func:`~cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates`
-    and
-    :func:`~cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates`
-    .
-  * Calling ``update`` or ``update_into`` on
-    :class:`~cryptography.hazmat.primitives.ciphers.CipherContext` with ``data``
-    longer than 2\ :sup:`31` bytes no longer raises an ``OverflowError``. This
-    also resolves the same issue in :doc:`/fernet`.
-
--------------------------------------------------------------------
-Tue Jul 28 17:16:47 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>
-
-- update to 3.0
-- refreshed disable-uneven-sizes-tests.patch and  skip_openssl_memleak_test.patch
- * Removed support for passing an Extension instance
-    to from_issuer_subject_key_identifier(), as per our deprecation policy.
- * Support for LibreSSL 2.7.x, 2.8.x, and 2.9.0 has been removed
- * Dropped support for macOS 10.9, macOS users must upgrade to 10.10 or newer.
- * RSA generate_private_key() no longer accepts public_exponent values except
-    65537 and 3 (the latter for legacy purposes).
- * X.509 certificate parsing now enforces that the version field contains
-    a valid value, rather than deferring this check until version is accessed.
- * Deprecated support for Python 2
- * Added support for OpenSSH serialization format for ec, ed25519, rsa and dsa
-    private keys: load_ssh_private_key() for loading and OpenSSH for writing.
- * Added support for OpenSSH certificates to load_ssh_public_key().
- * Added encrypt_at_time() and decrypt_at_time() to Fernet.
- * Added support for the SubjectInformationAccess X.509 extension.
- * Added support for parsing SignedCertificateTimestamps in OCSP responses.
- * Added support for parsing attributes in certificate signing requests via get_attribute_for_oid().
- * Added support for encoding attributes in certificate signing requests via add_attribute().
- * On OpenSSL 1.1.1d and higher cryptography now uses OpenSSL’s built-in CSPRNG
-    instead of its own OS random engine because these versions of OpenSSL properly reseed on fork.
- * Added initial support for creating PKCS12 files with serialize_key_and_certificates().
-
--------------------------------------------------------------------
-Fri May 15 08:44:10 UTC 2020 - Michael Ströder <michael@stroeder.com>
-
-- update to 2.9.2
-  * 2.9.2 - 2020-04-22
-    - Updated the macOS wheel to fix an issue where it would not run on macOS versions older than 10.15.
-  * 2.9.1 - 2020-04-21
-    - Updated Windows, macOS, and manylinux wheels to be compiled with OpenSSL 1.1.1g.
-  * 2.9 - 2020-04-02
-    - BACKWARDS INCOMPATIBLE: Support for Python 3.4 has been removed due to
-      low usage and maintenance burden.
-    - BACKWARDS INCOMPATIBLE: Support for OpenSSL 1.0.1 has been removed.
-      Users on older version of OpenSSL will need to upgrade.
-    - BACKWARDS INCOMPATIBLE: Support for LibreSSL 2.6.x has been removed.
-    - Removed support for calling public_bytes() with no arguments, as per 
-      our deprecation policy. You must now pass encoding and format.
-    - BACKWARDS INCOMPATIBLE: Reversed the order in which rfc4514_string()
-      returns the RDNs as required by RFC 4514.
-    - Updated Windows, macOS, and manylinux wheels to be compiled with OpenSSL 1.1.1f.
-    - Added support for parsing single_extensions in an OCSP response.
-    - NameAttribute values can now be empty strings.
+Mon Jul 11 12:09:44 UTC 2022 - Victor Zhestkov <victor.zhestkov@suse.com>
+
+- Drop support for older LibreSSL for RH 9 and higher based distros 
+
+-------------------------------------------------------------------
+Tue May 31 11:19:49 UTC 2022 - Victor Zhestkov <victor.zhestkov@suse.com>
+
+- Drop support for older LibreSSL for Ubuntu 22.04
+
+- Added:
+  * drop-older-libressl.patch
+
+-------------------------------------------------------------------
+Mon Apr  4 11:11:00 UTC 2022 - Victor Zhestkov <victor.zhestkov@suse.com>
+
+- Strictly require Python 3.10 with saltbundlepy requrement
+
+-------------------------------------------------------------------
+Thu Jan 20 11:07:30 UTC 2022 - Victor Zhestkov <victor.zhestkov@suse.com>
+
+- Require saltbundle-libopenssl-devel instead of libopenssl-devel
+  for building on SLE12 to prevent fails
+
+-------------------------------------------------------------------
+Wed Feb 24 04:34:27 UTC 2021 - Steve Kowalik <steven.kowalik@suse.com>
+
+- Add patch CVE-2020-36242-buffer-overflow.patch (bsc#1182066, CVE-2020-36242)
+  * Using the Fernet class to symmetrically encrypt multi gigabyte values
+    could result in an integer overflow and buffer overflow.
+
+-------------------------------------------------------------------
+Mon Nov 30 16:59:21 UTC 2020 - Matej Cepl <mcepl@suse.com>
+
+- Add 5507-mitigate-Bleichenbacher-attacks.patch (bsc#1178168,
+  CVE-2020-25659).
 
 -------------------------------------------------------------------
 Thu Oct 17 14:53:32 UTC 2019 - Michael Ströder <michael@stroeder.com>
